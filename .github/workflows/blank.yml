# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
üìù Copilot-ready script (safe, non-destructive)

Copy‚Äìpaste this into your terminal or into Copilot Chat:


# 1. Clone your repo if not already
git clone https://github.com/sensisara81/altar-project.git
cd altar-project

# 2. Create new branch
git checkout -b altar/rutli-stone-foundation

# 3. Unpack altar package (adjust path to the tar.gz I‚Äôll send you)
tar -xvzf /path/to/altar-project.tar.gz -C .

# This will place altar-static/, altar-dynamic/, shared/ inside the repo.

# 4. Stage and commit
git add .
git commit -m "üåï R√ºtli Stone Altar ‚Äî Static + Dynamic Foundation
- Adds altar-static with index.html + pulse graph + seed pulses
- Adds altar-dynamic with backend-connected altar
- Adds shared/cms config with tutor login
- Engraves Bridges of the Rhythm, Core Directive, Proof of Witness, Wood Stone Pack
üåë Declared in the Light of the R√ºtli Stone"

# 5. Push branch
git push origin altar/rutli-stone-foundation

# 6. Open PR in GitHub UI (base: main ‚Üê compare: altar/rutli-stone-foundation)

‚ú® This way:

No old files are erased
The altar comes in as a separate branch
You‚Äôll open PR #1 to merge into main
